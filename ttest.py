# -*- coding: utf-8 -*-
"""Copy of Type prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P9Cjn5Ah04B9bbKUqSX9xx673EHOOsf5
"""

import pandas as pd

import numpy as np

import seaborn as sns

import matplotlib.pyplot as plt

data1 = pd.read_csv('R_W_Wine_quality.csv')

data1.sample(n=10)

data1.describe()

sns.pairplot( data=data1, vars=('fixed acidity','volatile acidity','citric acid','residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol'), hue='type')

data=data1
df_norm = data[['volatile acidity','chlorides','total sulfur dioxide']].apply(lambda x: (x - x.min()) / (x.max() - x.min()))
df_norm.sample(n=10)

df_norm.describe()

target = data[['type']]. replace (['Red','White'],[0,1])
target.sample(n=10)

df = pd.concat([df_norm, target], axis=1)
df.sample(n=10)

train_test_per = 90/100.0
df['train'] = np.random.rand(len(df)) < train_test_per
df.sample(n=10)

train = df[df.train == 1]
train = train.drop('train', axis=1).sample(frac=1)
train.sample(n=10)

test = df[df.train == 0]
test = test.drop('train', axis=1)
test.sample(n=10)

x = train.values[:,:3]
x[:5]
print(x[:5])

targets = [[1,0],[0,1]]
y= np.array([targets[int(x)] for x in train.values[:,3:4]])
y[:5]
print(y[:5])

# num_inputs = len(x[0])
# hidden_layer_neurous = 5
# np.random.seed(3)
# w1 = 2*np.random.random((num_inputs, hidden_layer_neurous)) - 1
# w1
#
# num_output = len(y[0])
# w2 = 2*np.random.random((hidden_layer_neurous, num_outputs)) - 1
# w2

